
services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: namenode
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - HDFS_CONF_dfs_replication=1
    ports:
      - "9870:9870" # Web UI for Namenode
      - "9000:9000" # RPC Port for Hadoop
    volumes:
      - namenode-data:/hadoop/dfs/namenode
        - ./Makefile:/opt/hadoop/Makefile
      -  /Users/naduniweerasinghe/NbaAnalysis/src/main/resources:/opt/hadoop/resources
    networks:
      - hadoop

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    volumes:
      - datanode-data:/hadoop/dfs/datanode
    networks:
      - hadoop

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "8088:8088" # Web UI for ResourceManager
    networks:
      - hadoop

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: nodemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    networks:
      - hadoop

  hive-server:
    image: bde2020/hive:2.1.0-postgresql-metastore
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: hive-server
    environment:
      - "HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore"
    env_file:
      - ./hadoop-hive.env
    depends_on:
      - hive-metastore
      - resourcemanager
      - nodemanager
      - namenode
      - datanode
      - hive-metastore-postgresql
    ports:
      - "10000:10000" # HiveServer2 Thrift
    networks:
      - hadoop

  hive-metastore:
    image: bde2020/hive:2.1.0-postgresql-metastore
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    networks:
      - hadoop

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.1.0
    container_name: hive-metastore-postgresql
    platform: linux/amd64  # Force x86 compatibility if needed
    networks:
      - hadoop

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    platform: linux/amd64  # Force x86 compatibility if needed 
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SPARK_CONF_spark.sql.shuffle.partitions=200
      - SPARK_CONF_spark.task.maxFailures=10
      - SPARK_CONF_spark.speculation=true
      - SPARK_CONF_spark.local.dir=/tmp/spark
    ports:
      - "8080:8080" # Spark Master Web UI
      - "7077:7077" # Spark Master RPC
    volumes:
      - /Users/naduniweerasinghe/NbaAnalysis/resources:/tmp
      - /Users/naduniweerasinghe/NbaAnalysis/spark-output:/spark-output 
    networks:
      - hadoop

  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    deploy:
      replicas: 2 # 
    ports:
      - "8081:8081" # Spark Worker Web UI
    volumes:
      -  /Users/naduniweerasinghe/NbaAnalysis/src/main/resources:/opt/spark/resources
      - /Users/naduniweerasinghe/NbaAnalysis/spark-output:/spark-output 
    networks:
      - hadoop

  zeppelin:
    image: apache/zeppelin:0.10.1
    platform: linux/amd64  # Force x86 compatibility if needed
    container_name: zeppelin
    environment:
      - ZEPPELIN_ADDR=0.0.0.0
      - ZEPPELIN_PORT=8085
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_HOME=/spark
    ports:
      - "8085:8085" # Zeppelin Notebook UI
    depends_on:
      - spark-master
      - spark-worker
    networks:
      - hadoop

  hue:
    image: bde2020/hdfs-filebrowser:3.11
    platform: linux/amd64
    ports:
      - 8089:8089
    environment:
      - NAMENODE_HOST=namenode
    networks:
      - hadoop
  # PostgreSQL (Database for Superset)
  db:
    image: postgres:latest
    container_name: db
    environment:
      - POSTGRES_USER=superset
      - POSTGRES_PASSWORD=superset
      - POSTGRES_DB=superset
    networks:
      - hadoop

 # Apache Superset
  superset:
    image: apache/superset:latest
    container_name: superset
    environment:
      - SUPERSET_SECRET_KEY=b7a7fa093c8e89c3a432a0049bdf0e6d
      - DATABASE_URL=postgresql+psycopg2://superset:superset@db:5432/superset
      - REDIS_URL=redis://redis:6379/0
      - ENABLE_CSV_UPLOAD=True
    ports:
      - "8086:8088"  # Superset UI
    depends_on:
      - hive-metastore
      - spark-master
      - db
    volumes:
      - superset_home:/app/superset_home
      - /Users/naduniweerasinghe/NbaAnalysis/uploads:/app/superset_uploads
      - ./superset_config.py:/app/pythonpath/superset_config.py  # Mount the custom config
    command: >
      /bin/bash -c "
      pip install psycopg2-binary &&
      superset db upgrade &&
      superset load_examples &&
      superset init &&
      superset run -p 8088 -h 0.0.0.0"
    networks:
      - hadoop

  # Redis (Used by Superset for caching)
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  namenode-data:
  datanode-data:
  metastore-data:
  superset_home:
  db_data:

networks:
  hadoop:
    driver: bridge
